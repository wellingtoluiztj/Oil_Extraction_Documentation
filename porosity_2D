#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Nov 23 15:07:31 2021
@author: wsantos
This file.py extract the digital points from an image to use as a rock model
fluid dynamics simulation. 
In the end we need to have the same porosity
"""
#====packages====
import cv2
import numpy as np
import time
from tqdm import tqdm
import os
import pandas as pd
import seaborn as sea

#Import image
an_image = cv2.imread("Pores_24.png")

'''
Resize Resolution
'''
img = cv2.cvtColor(an_image, cv2.COLOR_BGR2GRAY) #Convert to gray scale
img2 = cv2.resize(img,(0,0),fx=0.09,fy=0.09) #Change resolution


t = pd.DataFrame((img2 != 0))

tt = t.replace({True:255, False:0})

'''
Save coordinates in a txt file
'''

coord = []
ttt = tt.to_numpy()
for i in range (len(ttt)):
    for j in range (len(ttt[0])):
        if ttt[i,j] == 0:
            coord.append([j, len(img)-i])
coord
coord = np.array(coord)

file = open('obst-wall.d90', 'w')
np.savetxt(file, coord, fmt = '%i')

'''
Porosity Calculation
'''

pts = np.argwhere(img==0)


soma_zeros = np.sum(an_image==0)
soma_vac = np.sum(an_image==255)
forma = np.shape(img)


sea.heatmap(img2==0)

soma_zeros

porosity = soma_vac/(soma_vac + soma_zeros)
print(porosity)


